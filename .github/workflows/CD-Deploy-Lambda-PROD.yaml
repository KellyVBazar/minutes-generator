name: Deploy Lambda Functions and Create New Versions

on:
  release:
    types: [created]

permissions:
  id-token: write
  contents: read

jobs:
  deploy_applications:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.11" ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials from OIDC provider
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{secrets.ROLE_OIDC_PROD}}
          aws-region: us-east-1

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('src/lib_layer/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install AWS SAM CLI
        run: |
          python -m pip install --upgrade pip
          pip install aws-sam-cli

      - name: Install dependencies for Lambda Layer
        run: |
          pip install -r src/lib_layer/requirements.txt -t src/lib_layer/python

      - name: Replace SG and Subnets in template file - Production
        working-directory: iac
        run: |
          sed -i 's|{{ACM_DOMAIN_PROD}}|${{ secrets.ACM_DOMAIN_PROD }}|g' template-lambda-and-api-gateway.yaml
          sed -i 's|{{DNS_API_PROD}}|${{ secrets.DNS_API_PROD }}|g' template-lambda-and-api-gateway.yaml
          sed -i 's|{{SECURITY_GROUP_PROD}}|${{ secrets.SECURITY_GROUP_PROD }}|g' template-lambda-and-api-gateway.yaml
          sed -i 's|{{SUBNET_A_PROD}}|${{ secrets.SUBNET_A_PROD }}|g' template-lambda-and-api-gateway.yaml
          sed -i 's|{{SUBNET_B_PROD}}|${{ secrets.SUBNET_B_PROD }}|g' template-lambda-and-api-gateway.yaml

      - name: Build SAM application
        run: |
          cd $GITHUB_WORKSPACE/iac/
          sam build -t template-lambda-and-api-gateway.yaml

      - name: Deploy SAM Application
        working-directory: iac
        run: |
          sam deploy -t template-lambda-and-api-gateway.yaml \
          --no-confirm-changeset \
          --no-fail-on-empty-changeset \
          --stack-name <project-name> \
          --resolve-s3 --resolve-image-repos --capabilities CAPABILITY_IAM \
          --parameter-overrides Environment=production